openapi: '3.0.0'
info:
  version: 0.2.0
  title: Mailscript
  license:
    name: MIT
servers:
  - url: https://mailscript-api.herokuapp.com/v1
    description: Production server
  - url: http://localhost:7000/v1
    description: Local development server
paths:
  /user:
    get:
      tags:
        - 'user'
      summary: 'Get the authenticated user'
      operationId: 'getAuthenticatedUser'
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '403':
          description: 'Bad credentials'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /send:
    post:
      tags:
        - 'send'
      summary: 'Send an email'
      operationId: 'send'
      requestBody:
        description: request body
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendRequest'
      responses:
        '200':
          description: 'successful operation'
        '400':
          description: 'Invalid input'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: 'Bad credentials'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /workspaces:
    post:
      tags:
        - 'workspaces'
      summary: 'Claim a Mailscript workspace'
      description: 'An attendant address will be created as well'
      operationId: 'addWorkspace'
      requestBody:
        description: request body
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddWorkspaceRequest'
      responses:
        '201':
          description: 'successful operation'
        '400':
          description: 'Bad request'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: 'Bad credentials'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '405':
          description: 'Invalid input'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      tags:
        - 'workspaces'
      summary: 'Get all workspaces you have access to'
      description: ''
      operationId: 'getAllWorkspaces'
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAllWorkspacesResponse'
        '403':
          description: 'Bad credentials'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '405':
          description: 'Invalid input'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /addresses:
    post:
      tags:
        - 'addresses'
      summary: 'Claim a new Mailscript address'
      description: ''
      operationId: 'addAddress'
      requestBody:
        description: Address body
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddAddressRequest'
      responses:
        '200':
          description: 'successful operation'
        '400':
          description: 'Internal error'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: 'Bad credentials'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '405':
          description: 'Invalid input'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      tags:
        - 'addresses'
      summary: 'Get all addresses you have access to'
      description: ''
      operationId: 'getAllAddresses'
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAllAddressesResponse'
        '403':
          description: 'Bad credentials'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '405':
          description: 'Invalid input'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /addresses/{address}:
    delete:
      tags:
        - 'addresses'
      summary: 'Delete a mailscript address'
      description: ''
      operationId: 'deleteAddress'
      parameters:
        - name: address
          in: path
          description: ID of address
          required: true
          schema:
            type: string
      responses:
        '204':
          description: 'successful delete operation'
        '403':
          description: 'Bad credentials'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '405':
          description: 'Invalid input'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /accessories:
    get:
      tags:
        - 'accessories'
      summary: 'Get all accessories you have access to'
      description: ''
      operationId: 'getAllAccessories'
      parameters:
        - name: name
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAllAccessoriesResponse'
        '403':
          description: 'Bad credentials'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '405':
          description: 'Invalid input'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    post:
      tags:
        - 'accessories'
      summary: 'Setup an accessory'
      description: ''
      operationId: 'addAccessory'
      requestBody:
        description: Accessory body
        required: true
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/AddSmsAccessoryRequest'
                - $ref: '#/components/schemas/AddMailscriptEmailAccessoryRequest'
      responses:
        '201':
          description: 'successful operation'
        '400':
          description: 'Internal error'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: 'Bad credentials'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '405':
          description: 'Invalid input'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /accessories/{id}:
    get:
      tags:
        - 'accessories'
      summary: 'Get an accessory'
      description: ''
      operationId: 'getAccessory'
      parameters:
        - name: id
          in: path
          description: ID of accessory
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Accessory'
        '403':
          description: 'Bad credentials'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '405':
          description: 'Invalid input'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - 'accessories'
      summary: 'Update an accessory'
      description: ''
      operationId: 'updateAccessory'
      parameters:
        - name: id
          in: path
          description: ID of accessory
          required: true
          schema:
            type: string
      requestBody:
        description: Key body
        required: true
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/UpdateSmsAccessoryRequest'
                - $ref: '#/components/schemas/UpdateMailscriptEmailAccessoryRequest'
      responses:
        '200':
          description: 'successful update operation'
        '403':
          description: 'Bad credentials'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '405':
          description: 'Invalid input'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
        - 'accessories'
      summary: 'Delete an accessory'
      description: ''
      operationId: 'deleteAccessory'
      parameters:
        - name: id
          in: path
          description: ID of accessory
          required: true
          schema:
            type: string
      responses:
        '204':
          description: 'Successful delete operation'
        '400':
          description: 'Failure'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: 'Bad credentials'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: 'Key not found'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /workflows:
    post:
      tags:
        - 'workflows'
      summary: 'Setup workflow'
      description: ''
      operationId: 'addWorkflow'
      requestBody:
        description: Workflow body
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddWorkflowRequest'
      responses:
        '201':
          description: 'successful operation'
        '400':
          description: 'Internal error'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: 'Bad credentials'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '405':
          description: 'Invalid input'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      tags:
        - 'workflows'
      summary: 'Get all workflows you have access to'
      description: ''
      operationId: 'getAllWorkflows'
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAllWorkflowsResponse'
        '403':
          description: 'Bad credentials'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '405':
          description: 'Invalid input'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /workflows/{workflow}:
    put:
      tags:
        - 'workflows'
      summary: 'Update an workflow'
      operationId: 'updateWorkflow'
      parameters:
        - name: workflow
          in: path
          description: ID of the workflow
          required: true
          schema:
            type: string
      requestBody:
        description: Workflow body
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddWorkflowRequest'
      responses:
        '200':
          description: 'Successful update operation'
        '400':
          description: 'Failure'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: 'Bad credentials'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: 'Key not found'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
        - 'workflows'
      summary: 'Delete a workflow'
      operationId: 'deleteWorkflow'
      parameters:
        - name: workflow
          in: path
          description: ID of the workflow
          required: true
          schema:
            type: string
      responses:
        '204':
          description: 'Successful delete operation'
        '400':
          description: 'Failure'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: 'Bad credentials'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: 'Key not found'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /addresses/{address}/keys:
    get:
      tags:
        - 'keys'
      summary: 'List address keys'
      operationId: getAllKeys
      parameters:
        - name: address
          in: path
          description: ID of address
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAllKeysResponse'
        '403':
          description: 'Bad credentials'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: 'Address not found'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    post:
      tags:
        - 'keys'
      summary: 'Add address key'
      operationId: addKey
      parameters:
        - name: address
          in: path
          description: ID of address
          required: true
          schema:
            type: string
      requestBody:
        description: Key body
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddKeyRequest'
      responses:
        '201':
          description: 'successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddKeyResponse'
        '403':
          description: 'Bad credentials'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: 'Address not found'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /addresses/{address}/keys/{key}:
    get:
      tags:
        - 'keys'
      summary: 'Get address key'
      operationId: getKey
      parameters:
        - name: address
          in: path
          description: ID of address
          required: true
          schema:
            type: string
        - name: key
          in: path
          description: ID of key
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Key'
        '403':
          description: 'Bad credentials'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: 'Key not found'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - 'keys'
      summary: 'Update an address key'
      operationId: 'updateKey'
      parameters:
        - name: address
          in: path
          description: ID of address
          required: true
          schema:
            type: string
        - name: key
          in: path
          description: ID of key
          required: true
          schema:
            type: string
      requestBody:
        description: Key body
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateKeyRequest'
      responses:
        '200':
          description: 'Successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Key'
        '400':
          description: 'Failure'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: 'Bad credentials'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: 'Key not found'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
        - 'keys'
      summary: 'Delete address key'
      operationId: deleteKey
      parameters:
        - name: address
          in: path
          description: ID of address
          required: true
          schema:
            type: string
        - name: key
          in: path
          description: ID of key
          required: true
          schema:
            type: string
      responses:
        '204':
          description: 'Successful delete operation'
        '400':
          description: 'Failure'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: 'Bad credentials'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: 'Key not found'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /verifications:
    get:
      tags:
        - 'verifications'
      summary: 'Get all verificats for the user'
      operationId: 'getAllVerifications'
      responses:
        '200':
          description: 'Successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAllVerificationsResponse'
        '403':
          description: 'Bad credentials'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    post:
      tags:
        - 'verifications'
      summary: 'Start verification process for external email address or sms number'
      operationId: 'addVerification'
      requestBody:
        description: Key body
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddEmailVerificationRequest'
      responses:
        '201':
          description: 'Successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddVerificationResponse'
        '400':
          description: 'Failure'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: 'Bad credentials'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /verifications/{verification}/verify:
    post:
      tags:
        - 'verifications'
      summary: 'Verify an email address or sms number with a code'
      operationId: 'verify'
      parameters:
        - name: verification
          in: path
          description: ID of the verification entry
          required: true
          schema:
            type: string
      requestBody:
        description: Verify action body
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VerifyRequest'
      responses:
        '200':
          description: 'Successful operation'
        '400':
          description: 'Failure'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: 'Not authorized or bad code'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: 'Not found'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
components:
  schemas:
    User:
      required:
        - id
        - displayName
        - email
        - createdAt
      properties:
        id:
          type: string
        displayName:
          type: string
        photoURL:
          type: string
        email:
          type: string
        createdAt:
          type: string
          format: date-time
    Workspace:
      required:
        - id
        - owner
        - createdAt
        - createdBy
      properties:
        id:
          type: string
        owner:
          type: string
        createdAt:
          type: string
          format: date-time
        createdBy:
          type: string
    Address:
      required:
        - id
        - owner
        - createdAt
        - createdBy
      properties:
        id:
          type: string
        owner:
          type: string
        createdAt:
          type: string
          format: date-time
        createdBy:
          type: string
    Workflow:
      required:
        - id
        - name
        - owner
        - createdAt
        - createdBy
        - trigger
        - actions
      properties:
        id:
          type: string
        name:
          type: string
        owner:
          type: string
        createdAt:
          type: string
          format: date-time
        createdBy:
          type: string
        trigger:
          type: object
          required:
            - accessoryId
            - config
          properties:
            accessoryId:
              type: string
            config:
              type: object
              required:
                - criterias
              properties:
                criterias:
                  type: array
                  items:
                    $ref: '#/components/schemas/Criteria'
        actions:
          type: array
          items:
            type: object
            properties:
              accessoryId:
                type: string
              config:
                oneOf:
                  - $ref: '#/components/schemas/ActionForwardConfig'
    Criteria:
      minProperties: 1
      properties:
        sentTo:
          type: string
        subjectContains:
          type: string
        from:
          type: string
        domain:
          type: string
        hasTheWords:
          type: string
        hasAttachments:
          type: boolean
    ActionForwardConfig:
      required:
        - type
        - forward
      properties:
        type:
          type: string
          enum: ['forward']
        forward:
          type: string
    Accessory:
      required:
        - id
        - type
        - name
        - key
        - createdAt
        - createdBy
      properties:
        id:
          type: string
        type:
          type: string
          enum: ['mailscript-email', 'sms', 'webhook']
        owner:
          type: string
        createdAt:
          type: string
          format: date-time
        createdBy:
          type: string
        name:
          type: string
        address:
          type: string
        sms:
          type: string
        key:
          type: string
    Key:
      required:
        - id
        - name
        - read
        - write
        - createdBy
        - createdAt
      properties:
        id:
          type: string
        name:
          type: string
        read:
          type: boolean
        write:
          type: boolean
        createdBy:
          type: string
        createdAt:
          type: string
          format: date-time
    VerificationEmail:
      properties:
        id:
          type: string
        type:
          type: string
          enum: ['email']
        email:
          type: string
        verifiedBy:
          type: string
        verifiedAt:
          type: string
          format: date-time
    ErrorResponse:
      required:
        - error
      properties:
        error:
          type: string
    AddWorkspaceRequest:
      required:
        - workspace
      properties:
        workspace:
          type: string
    GetAllWorkspacesResponse:
      required:
        - list
      properties:
        list:
          type: array
          items:
            type: object
            oneOf:
              - $ref: '#/components/schemas/Workspace'
    AddAddressRequest:
      required:
        - address
      properties:
        address:
          type: string
    GetAllAddressesResponse:
      required:
        - list
      properties:
        list:
          type: array
          items:
            type: object
            oneOf:
              - $ref: '#/components/schemas/Address'
    GetAllWorkflowsResponse:
      required:
        - list
      properties:
        list:
          type: array
          items:
            type: object
            oneOf:
              - $ref: '#/components/schemas/Workflow'
    AddSmsAccessoryRequest:
      required:
        - name
        - type
        - sms
      properties:
        name:
          type: string
        type:
          type: string
          enum: ['sms']
        sms:
          type: string
    UpdateSmsAccessoryRequest:
      required:
        - name
        - type
        - sms
      properties:
        name:
          type: string
        type:
          type: string
          enum: ['sms']
        sms:
          type: string
    AddMailscriptEmailAccessoryRequest:
      required:
        - name
        - type
        - address
        - key
      properties:
        name:
          type: string
        type:
          type: string
          enum: ['mailscript-email']
        address:
          type: string
        key:
          type: string
    UpdateMailscriptEmailAccessoryRequest:
      required:
        - name
        - type
        - address
        - key
      properties:
        name:
          type: string
        type:
          type: string
          enum: ['mailscript-email']
        address:
          type: string
        key:
          type: string
    AddWorkflowRequest:
      required:
        - name
        - trigger
        - actions
      properties:
        name:
          type: string
        trigger:
          type: object
          properties:
            accessoryId:
              type: string
            config:
              type: object
        actions:
          type: array
          items:
            type: object
            properties:
              accessoryId:
                type: string
              config:
                type: object
    GetAllAccessoriesResponse:
      required:
        - list
      properties:
        list:
          type: array
          items:
            type: object
            oneOf:
              - $ref: '#/components/schemas/Accessory'
    SendRequest:
      required:
        - 'to'
        - 'from'
        - 'subject'
      properties:
        to:
          type: string
        from:
          type: string
        subject:
          type: string
        text:
          type: string
        html:
          type: string
    GetAllKeysResponse:
      required:
        - list
      properties:
        list:
          type: array
          items:
            type: object
            oneOf:
              - $ref: '#/components/schemas/Key'
    AddKeyRequest:
      required:
        - 'name'
        - 'read'
        - 'write'
      properties:
        name:
          type: string
        read:
          type: boolean
        write:
          type: boolean
    UpdateKeyRequest:
      required:
        - 'name'
        - 'read'
        - 'write'
      properties:
        name:
          type: string
        read:
          type: boolean
        write:
          type: boolean
    AddKeyResponse:
      properties:
        id:
          type: string
    AddEmailVerificationRequest:
      required:
        - type
        - email
      properties:
        type:
          type: string
          enum: ['email']
        email:
          type: string
    AddVerificationResponse:
      required:
        - id
      properties:
        id:
          type: string
    VerifyRequest:
      required:
        - email
        - code
      properties:
        email:
          type: string
        code:
          type: string
    GetAllVerificationsResponse:
      properties:
        list:
          type: array
          items:
            oneOf:
              - $ref: '#/components/schemas/VerificationEmail'
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
security:
  - bearerAuth: []
